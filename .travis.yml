env:
  global:
    - secure: "C2q+hdZT5spjDC7mG5OL4nnJnxNzDzzWWSen3Y+QHbvb8Py9lZYZfRxplg357GgpYuwd649ZNDwp9QrQlsl13VegK/YDaJ67FOYJ/JFUgsLAX7JqEVaMSf2NV7uTK+Nsp/Fj+BeBynQ3g1kS+M6mEVVSps1i3xdYEh8SM0SfG06ooSgF1ouhNr4C4r5JdFtVnAy2roH3EGTQWjZWDReGWky13I3Y/5dy+6r84RJp8+tPb4EGgZKSrl/w4V+NEbefeM6Ds/BecenutTrmBCYlRb4KH1AWcaJrNLhpbsyFHtQDw74o6LEbOf294H4yPMQx0N+5wEdb3f9VeY00nKulpK2hdtKU9ivqsjiIjtGn44YQWYJ3vaucJ8SLAjaHlzRLhMnBjNo9xHO6JtiHPy9/6M3ZdF1KLWHF0Du1Yc63GcaqLWkDHzkdJKyclw/e3tcbXMRoEPDaE1Dl2MVVuUsQk+uw8HEnM6tMMMCGAOze+5tslgSdgsS6tm2EzNvzzh2YKNPScyJfyMN6Rd8PQpYpLJex3VLO5SgU0j/YsKjDSW9ULfrDRKQjeF8CZodcxaMA+b07jf2oe2QvHDChTBfXinvSgSAfpEkGb7NHVRHdEnYeT1OapPJVa1sXSOZPfK8GtEiQijshQDKo035Xu5bcQBcZcKbN/VJqWYdNYdDNFt4="
    - secure: "Gpj1jKHRGz0tQCUanjIn7fpENhcvRrOEDcNJ8MENsBmAqU7ygQwFCYzMgoMwg4VFaE2s+baS/SR2bvivUl+Sz5Ravk9Ow102RmLrc/ybFi0cQy2Ums0nOoOtY6VMp9kubGuzZg384JQgiw3Xs9XtHukS15dkaGgnDUoZjdpKw9QyciQer+PGJS67Qwrz5IG0RSMDea9ya0sXc6ElHSZ9cXvK6VGlh8J533Jc0zMFZjmp6LFsdIEoAlVynQX6kkk9j1/d1C0BF1W8cRPS1yuDoVTSoUoh6HD48DImCJmreeMd2VkZRTY1PkF7iMiHuYLJOCjFySfTua7satJ39CXruVs0U3aDVnIukVjgGBkhFXUBYd45LvgfxVP93fBV2rg5yeAMoHZ6XU3voIWQ0tmsbiDYR7RYXDZotI6p4cIC+qm14lnzPoExjAacPcHHqsEDrLZ2Y+cmoxifR/1yDf3rQdqL8fJ2yIxJyNQvD3lrnicjGYl2BQjS+jtcECSWKIsj0YQ1LmlEwmuRW01E5qR1omf0IuAMKu9Br0KAtYUQYKwfKlth2Mc7n1fW3Ne4JGa4zRJdipQfMx5VKkd7PM0+CikufAybfSjw7FY1JQBYoXqDNbdxMla9t2OQQKpIomvjwvFfwE6QfN5zkiMd5a22sqQUX0XjjbZzcHV0z+pRNcc="
    - secure: "yi/0Lq1auzo6O/N7j5dNbFWClm69rVWwe39OBIunt8d6Cl69vgJNHivf3O5A4P/cFQR/aeRiN3o0NBF2gtKeQswejdT4agqQUNuM5twpHQ0m4ynqGE+3WJCpquWxTzFizramdTWewSqEB+gwhugBTQvIGiIYPMwotorqrl00wYTMCNht1OVdubm4XWuuvJuAHr5pdFWpHQbiPKzjs2oSBIZqIwghK4ygOIDibjLF7z5Wfe4EPMdUztyF0MHtRTa1xWQPmO3bOTcll1Lox/kdr03o609jQlFiY5O+Nnzt/GGkMFZtO3tIFSa+DPt6Twai/BVvIcXMi4sosikAn3dGNzXS93rtSkTjm+SQUWB/RfLruOlQy2fjrYDBULvdsM5kYYOnPls36n88oXF6NsWt/2fCK40RARiCFfI5adsZHpY7bVQBZj/hA9PLzDNiDsTAXIZWAR+Nk7++V/D9MNpoYEhLjC7dj09IoDzSwm6UZFf5p55iuSkt8yduTeFqbvaB4xWWa5cUfgI0y4/m0aW7bGjCzUP+x5bFVh5B3N3TKxfk1QzCcGmbCqPsIQlkOeQ26Byd2Uvgp1AIUI3db54sxUDXHKTV1QO0VOIKQXVqj6Eq1i3gYa5M1rpM7xA95NZZEUfFpky+/wY6HIeHSFbwpf4KhJk9dTUFfY0cLFtfRR0="

jobs:
  include:
    - stage: deploy
      if: type != pull_request
      name: PyPI upload 

      os: linux
      dist: xenial
      language: python
      python: 3.7
      
      install: 
        - pip3 install twine

      script:
        - if [[ $TRAVIS_REPO_SLUG = 'colomoto/pyMaBoSS' && $TRAVIS_TAG = '' ]]; then
            python setup.py sdist;
            twine upload -u __token__ -p $PYPI_UPLOAD_TOKEN dist/*;
          
          fi
